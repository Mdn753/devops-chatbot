---
- name: Install and configure Zabbix
  hosts: all
  become: yes
  gather_facts: yes

  collections:           # we still need the MySQL collection
    - community.mysql

  vars:
    zabbix_version: "5.0"

    zabbix_db_name: zabbix
    zabbix_db_user: zabbix
    zabbix_db_pass: zabbix_password

    php_timezone: Africa/Casablanca

  tasks:
  # ───────────────────────────────────────────────────────────────────
  # Detect platform
  # ───────────────────────────────────────────────────────────────────
  - name: Set OS-specific variables
    ansible.builtin.set_fact:
      zabbix_repo_pkg: |
        {% if ansible_os_family == 'RedHat' %}
        https://repo.zabbix.com/zabbix/{{ zabbix_version }}/rhel/{{ ansible_distribution_major_version }}/x86_64/zabbix-release-{{ zabbix_version }}-1.el{{ ansible_distribution_major_version }}.noarch.rpm
        {% elif ansible_os_family == 'Debian' %}
        https://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution | lower }}/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}-1+{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}_all.deb
        {% endif %}
      mysql_driver_pkg: "{{ 'python3-PyMySQL' if ansible_os_family == 'RedHat' else 'python3-pymysql' }}"
      web_server_pkg:   "{{ 'httpd' if ansible_os_family == 'RedHat' else 'apache2' }}"

  # ───────────────────────────────────────────────────────────────────
  # Add Zabbix repository
  # ───────────────────────────────────────────────────────────────────
  - name: Install Zabbix repo package (RedHat)
    ansible.builtin.yum:
      name: "{{ zabbix_repo_pkg }}"
      state: present
    when: ansible_os_family == 'RedHat'

  - name: Install Zabbix repo package (Debian)
    ansible.builtin.apt:
      deb: "{{ zabbix_repo_pkg }}"
      state: present
      update_cache: yes
    when: ansible_os_family == 'Debian'

  # EPEL is only for RHEL-like OSes
  - name: Enable EPEL (RedHat only)
    ansible.builtin.yum:
      name: epel-release
      state: present
    when: ansible_os_family == 'RedHat'

  # ───────────────────────────────────────────────────────────────────
  # Install packages common to both families
  # ───────────────────────────────────────────────────────────────────
  - name: Install Zabbix server, frontend, agent and deps
    ansible.builtin.package:
      name:
        - zabbix-server-mysql
        - zabbix-web-mysql
        - zabbix-agent
        - mariadb-server          # provides MySQL on both families
        - "{{ mysql_driver_pkg }}" # PyMySQL driver
      state: present
      update_cache: yes           # safe on both yum & apt

  # ───────────────────────────────────────────────────────────────────
  # Database setup
  # ───────────────────────────────────────────────────────────────────
  - name: Ensure MariaDB is running
    ansible.builtin.service:
      name: mariadb
      state: started
      enabled: yes

  - name: Create Zabbix database
    community.mysql.mysql_db:
      name: "{{ zabbix_db_name }}"
      state: present
      login_user: root

  - name: Create Zabbix DB user
    community.mysql.mysql_user:
      name: "{{ zabbix_db_user }}"
      password: "{{ zabbix_db_pass }}"
      priv: "{{ zabbix_db_name }}.*:ALL"
      host: localhost
      state: present
      login_user: root

  - name: Import initial schema and data
    ansible.builtin.command: >
      bash -c "gunzip -c $(ls /usr/share/doc/zabbix-server-mysql*/create.sql.gz) |
               mysql -u {{ zabbix_db_user }} -p{{ zabbix_db_pass }} {{ zabbix_db_name }}"
    args:
      creates: /var/lib/mysql/{{ zabbix_db_name }}/users.ibd   # idempotence

  # ───────────────────────────────────────────────────────────────────
  # Configuration tweaks
  # ───────────────────────────────────────────────────────────────────
  - name: Configure Zabbix server DB password
    ansible.builtin.lineinfile:
      path: /etc/zabbix/zabbix_server.conf
      regexp: '^#?DBPassword='
      line: "DBPassword={{ zabbix_db_pass }}"
    notify: restart zabbix server

  - name: Configure PHP timezone
    ansible.builtin.lineinfile:
      path: >
        {{ '/etc/httpd/conf.d/zabbix.conf'
           if ansible_os_family == 'RedHat'
           else '/etc/apache2/conf-enabled/zabbix.conf' }}
      regexp: '^php_value date.timezone'
      line: "php_value date.timezone {{ php_timezone }}"
    notify: restart web

  # ───────────────────────────────────────────────────────────────────
  # Services
  # ───────────────────────────────────────────────────────────────────
  - name: Start and enable Zabbix services
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
    loop:
      - zabbix-server
      - zabbix-agent
      - "{{ web_server_pkg }}"

  handlers:
    - name: restart zabbix server
      ansible.builtin.service:
        name: zabbix-server
        state: restarted

    - name: restart web
      ansible.builtin.service:
        name: "{{ web_server_pkg }}"
        state: restarted
