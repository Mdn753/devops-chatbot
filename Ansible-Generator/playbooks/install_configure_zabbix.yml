---
- name: Install and configure Zabbix
  hosts: all
  become: yes
  gather_facts: yes

  collections:
    - community.mysql          # ← MySQL/MariaDB modules

  vars:
    zabbix_version: "5.0"      # LTS branch
    zabbix_db_name: zabbix
    zabbix_db_user: zabbix
    zabbix_db_pass: zabbix_password
    php_timezone: Africa/Casablanca

  tasks:
  # ──────────────────────────────────────────────
  # Repositories & keys
  # ──────────────────────────────────────────────
  - name: Add Zabbix repo (Red Hat family)
    ansible.builtin.yum:
      name: >-
        https://repo.zabbix.com/zabbix/{{ zabbix_version }}/rhel/
        {{ ansible_distribution_major_version }}/x86_64/
        zabbix-release-{{ zabbix_version }}-1.el{{ ansible_distribution_major_version }}.noarch.rpm
      state: present
    when: ansible_os_family == "RedHat"

  - name: Enable EPEL (Red Hat family)
    ansible.builtin.yum:
      name: epel-release
      state: present
    when: ansible_os_family == "RedHat"

  - name: Ensure gnupg is present (Debian/Ubuntu)
    ansible.builtin.apt:
      name: gnupg
      state: present
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Install Zabbix GPG key (Debian/Ubuntu, no apt-key)
    ansible.builtin.apt_key:
      url: https://repo.zabbix.com/zabbix-official-repo.key
      keyring: /usr/share/keyrings/zabbix.gpg
      dearmor: yes
      state: present
    when: ansible_os_family == "Debian"

  - name: Add Zabbix apt repository (Debian/Ubuntu)
    ansible.builtin.apt_repository:
      repo: >-
        deb [arch=amd64 signed-by=/usr/share/keyrings/zabbix.gpg]
        https://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution | lower }}
        {{ ansible_distribution_release }} main
      filename: zabbix
      state: present
      update_cache: yes
    when: ansible_os_family == "Debian"

  # ──────────────────────────────────────────────
  # Package installation
  # ──────────────────────────────────────────────
  - name: Install Zabbix server, frontend, agent, MariaDB & driver
    ansible.builtin.package:
      name:
        - zabbix-server-mysql
        - zabbix-web-mysql
        - zabbix-agent
        - mariadb-server
        - "{{ 'python3-PyMySQL' if ansible_os_family == 'RedHat' else 'python3-pymysql' }}"
      state: present
      update_cache: yes

  # ──────────────────────────────────────────────
  # Database setup
  # ──────────────────────────────────────────────
  - name: Ensure MariaDB is running
    ansible.builtin.service:
      name: mariadb
      state: started
      enabled: yes

  - name: Create Zabbix database
    community.mysql.mysql_db:
      name: "{{ zabbix_db_name }}"
      state: present
      login_user: root

  - name: Create Zabbix DB user
    community.mysql.mysql_user:
      name: "{{ zabbix_db_user }}"
      password: "{{ zabbix_db_pass }}"
      host: localhost
      priv: "{{ zabbix_db_name }}.*:ALL"
      state: present
      login_user: root

  - name: Import initial schema
    ansible.builtin.command: >
      bash -c "gunzip -c $(ls /usr/share/doc/zabbix-server-mysql*/create.sql.gz) |
               mysql -u {{ zabbix_db_user }} -p{{ zabbix_db_pass }} {{ zabbix_db_name }}"
    args:
      creates: /var/lib/mysql/{{ zabbix_db_name }}/users.ibd

  # ──────────────────────────────────────────────
  # Configuration tweaks
  # ──────────────────────────────────────────────
  - name: Set DBPassword in zabbix_server.conf
    ansible.builtin.lineinfile:
      path: /etc/zabbix/zabbix_server.conf
      regexp: '^#?DBPassword='
      line: "DBPassword={{ zabbix_db_pass }}"
    notify: restart zabbix

  - name: Set PHP timezone for frontend
    ansible.builtin.lineinfile:
      path: >-
        {{ '/etc/httpd/conf.d/zabbix.conf'
           if ansible_os_family == 'RedHat'
           else '/etc/apache2/conf-enabled/zabbix.conf' }}
      regexp: '^php_value date.timezone'
      line: "php_value date.timezone {{ php_timezone }}"
    notify: restart web

  # ──────────────────────────────────────────────
  # Services
  # ──────────────────────────────────────────────
  - name: Start & enable Zabbix, agent, web
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
    loop:
      - zabbix-server
      - zabbix-agent
      - "{{ 'httpd' if ansible_os_family == 'RedHat' else 'apache2' }}"

  handlers:
    - name: restart zabbix
      ansible.builtin.service:
        name: zabbix-server
        state: restarted

    - name: restart web
      ansible.builtin.service:
        name: "{{ 'httpd' if ansible_os_family == 'RedHat' else 'apache2' }}"
        state: restarted
