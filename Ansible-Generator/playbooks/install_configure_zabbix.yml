---
- name: Install and configure Zabbix
  hosts: all
  become: yes
  gather_facts: yes

  collections:
    - community.mysql             # MySQL/MariaDB tasks

  vars:
    # ── Generic settings ─────────────────────────────────────
    zabbix_version: "5.0"
    zabbix_db_name:  zabbix
    zabbix_db_user:  zabbix
    zabbix_db_pass:  zabbix_password
    php_timezone:    Africa/Casablanca

    # ── Debian/Ubuntu key paths ──────────────────────────────
    zbx_key_url:   https://repo.zabbix.com/zabbix-official-repo.key
    zbx_key_asc:   /usr/share/keyrings/zabbix.asc
    zbx_keyring:   /usr/share/keyrings/zabbix.gpg

    # ── Convenience vars (set dynamically later) ─────────────
    zbx_frontend_pkg: ""
    zbx_apache_conf: ""
    zbx_web_srv:     ""

  tasks:
  # ───────────────────────────────────────────────────────────
  # Repo & key  (unchanged from last version)
  # ───────────────────────────────────────────────────────────
  - name: Add Zabbix repo (RHEL family)
    ansible.builtin.yum:
      name: >-
        https://repo.zabbix.com/zabbix/{{ zabbix_version }}/rhel/
        {{ ansible_distribution_major_version }}/x86_64/
        zabbix-release-{{ zabbix_version }}-1.el{{ ansible_distribution_major_version }}.noarch.rpm
      state: present
    when: ansible_os_family == "RedHat"

  - name: Enable EPEL (RHEL family)
    ansible.builtin.yum:
      name: epel-release
      state: present
    when: ansible_os_family == "RedHat"

  # Debian / Ubuntu branch
  - name: Ensure gnupg present
    ansible.builtin.apt:
      name: gnupg
      state: present
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Map unsupported Ubuntu codenames → jammy
    ansible.builtin.set_fact:
      zbx_ubuntu_series: "{{ ubuntu_series_map.get(ansible_distribution_release, 'jammy') }}"
    vars:
      ubuntu_series_map:
        jammy: jammy
        focal: focal
        bionic: bionic
        noble: jammy          # 24.04 falls back for 5.0 repo
    when: ansible_os_family == "Debian"

  - name: Download Zabbix ASCII key
    ansible.builtin.get_url:
      url:  "{{ zbx_key_url }}"
      dest: "{{ zbx_key_asc }}"
      mode: "0644"
    when: ansible_os_family == "Debian"

  - name: Convert key to keyring
    ansible.builtin.command:
      cmd: "gpg --dearmor -o {{ zbx_keyring }} {{ zbx_key_asc }}"
    args:
      creates: "{{ zbx_keyring }}"
    when: ansible_os_family == "Debian"

  - name: Add Zabbix apt repository
    ansible.builtin.apt_repository:
      repo: >-
        deb [arch=amd64 signed-by={{ zbx_keyring }}]
        https://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu
        {{ zbx_ubuntu_series }} main
      filename: zabbix
      state: present
      update_cache: yes
    when: ansible_os_family == "Debian"

  # ───────────────────────────────────────────────────────────
  # Pick package names & paths for each family
  # ───────────────────────────────────────────────────────────
  - name: Set family-specific vars
    ansible.builtin.set_fact:
      zbx_frontend_pkg: "{{ 'zabbix-web-mysql'  if ansible_os_family == 'RedHat' else 'zabbix-frontend-php' }}"
      zbx_extra_pkg:    "{{ ''                  if ansible_os_family == 'RedHat' else 'zabbix-apache-conf' }}"
      zbx_web_srv:      "{{ 'httpd'             if ansible_os_family == 'RedHat' else 'apache2' }}"
      zbx_apache_conf:  "{{ '/etc/httpd/conf.d/zabbix.conf'
                            if ansible_os_family == 'RedHat'
                            else '/etc/zabbix/apache.conf' }}"
    when: ansible_os_family in ['RedHat', 'Debian']

  # ───────────────────────────────────────────────────────────
  # Package installation
  # ───────────────────────────────────────────────────────────
  - name: Install Zabbix server, frontend, agent, MariaDB & driver
    ansible.builtin.package:
      name: >-
        {{ [
             'zabbix-server-mysql',
             zbx_frontend_pkg,
             'zabbix-agent',
             'mariadb-server',
             ('python3-PyMySQL' if ansible_os_family == 'RedHat' else 'python3-pymysql'),
             zbx_extra_pkg
           ] | select('truthy') | list }}
      state: present
      update_cache: yes

  # ───────────────────────────────────────────────────────────
  # Database
  # ───────────────────────────────────────────────────────────
  - name: Ensure MariaDB is running
    ansible.builtin.service:
      name: mariadb
      state: started
      enabled: yes

  - name: Create Zabbix database
    community.mysql.mysql_db:
      name: "{{ zabbix_db_name }}"
      state: present
      login_user: root

  - name: Create Zabbix DB user
    community.mysql.mysql_user:
      name: "{{ zabbix_db_user }}"
      password: "{{ zabbix_db_pass }}"
      host: localhost
      priv: "{{ zabbix_db_name }}.*:ALL"
      state: present
      login_user: root

  - name: Import initial schema
    ansible.builtin.command: >
      bash -c "gunzip -c $(ls /usr/share/doc/zabbix-server-mysql*/create.sql.gz) |
               mysql -u {{ zabbix_db_user }} -p{{ zabbix_db_pass }} {{ zabbix_db_name }}"
    args:
      creates: /var/lib/mysql/{{ zabbix_db_name }}/users.ibd

  # ───────────────────────────────────────────────────────────
  # Configuration tweaks
  # ───────────────────────────────────────────────────────────
  - name: Set DBPassword in zabbix_server.conf
    ansible.builtin.lineinfile:
      path: /etc/zabbix/zabbix_server.conf
      regexp: '^#?DBPassword='
      line: "DBPassword={{ zabbix_db_pass }}"
    notify: restart zabbix-server

  - name: Set PHP timezone for frontend
    ansible.builtin.lineinfile:
      path: "{{ zbx_apache_conf }}"
      regexp: '^php_value +date.timezone'
      line: "php_value date.timezone {{ php_timezone }}"
    notify: restart webserver

  # ───────────────────────────────────────────────────────────
  # Services
  # ───────────────────────────────────────────────────────────
  - name: Start & enable Zabbix services
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
    loop:
      - zabbix-server
      - zabbix-agent
      - "{{ zbx_web_srv }}"

  handlers:
    - name: restart zabbix-server
      ansible.builtin.service:
        name: zabbix-server
        state: restarted

    - name: restart webserver
      ansible.builtin.service:
        name: "{{ zbx_web_srv }}"
        state: restarted
