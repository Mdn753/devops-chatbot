---
- name: Install & configure Zabbix 5 LTS (MariaDB + Apache/PHP)
  hosts: all
  become: true
  gather_facts: true

  vars:
    # —— Versions & credentials ————————————————————
    zabbix_version: "5.0"

    zabbix_db_name: zabbix
    zabbix_db_user: zabbix
    zabbix_db_pass: zabbix_password   # ← change / vault in prod

    php_timezone: Africa/Casablanca

    zbx_key_path:  /usr/share/keyrings/zabbix.gpg
    zbx_repo: >-
      deb [arch=amd64 signed-by={{ zbx_key_path }}]
      https://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu
      {{ ansible_lsb.codename }} main

  tasks:
  # ------------------------------------------------------------------
  # 1 — Repo key & repository
  # ------------------------------------------------------------------
  - name: Install repo prerequisites
    apt:
      name: [gnupg, ca-certificates, lsb-release, curl]
      state: present
      update_cache: true

  - name: Download Zabbix GPG key
    get_url:
      url: https://repo.zabbix.com/zabbix-official-repo.key
      dest: "{{ zbx_key_path }}"
      mode: "0644"

  - name: Add Zabbix APT repository
    apt_repository:
      repo: "{{ zbx_repo }}"
      filename: zabbix
      state: present
      update_cache: true

  # ------------------------------------------------------------------
  # 2 — Install packages
  # ------------------------------------------------------------------
  - name: Install Zabbix server, agent, DB, web stack
    apt:
      name:
        - zabbix-server-mysql
        - zabbix-frontend-php
        - zabbix-agent
        - mariadb-server
        - libapache2-mod-php
        - php-mysql
      state: present
      update_cache: true

  # ------------------------------------------------------------------
  # 3 — Database: create & grant (socket login as root)
  # ------------------------------------------------------------------
  - name: Ensure MariaDB running
    service:
      name: mariadb
      state: started
      enabled: true

  - name: Create DB and user
    shell: |
      mysql --protocol=socket <<'EOSQL'
      CREATE DATABASE IF NOT EXISTS {{ zabbix_db_name }}
        CHARACTER SET utf8 COLLATE utf8_bin;
      CREATE USER IF NOT EXISTS '{{ zabbix_db_user }}'@'localhost'
        IDENTIFIED BY '{{ zabbix_db_pass }}';
      GRANT ALL PRIVILEGES ON {{ zabbix_db_name }}.* TO
        '{{ zabbix_db_user }}'@'localhost';
      FLUSH PRIVILEGES;
      EOSQL
    args:
      executable: /bin/bash

  # ------------------------------------------------------------------
  # 4 — Import initial schema (only once)
  # ------------------------------------------------------------------
  - name: Check if schema already imported
    stat:
      path: "/var/lib/mysql/{{ zabbix_db_name }}/history.ibd"
    register: schema_present

  - name: Import schema / images / data
    shell: |
      for f in schema.sql.gz images.sql.gz data.sql.gz; do
        zcat /usr/share/zabbix-server-mysql/$f | mysql {{ zabbix_db_name }}
      done
    when: not schema_present.stat.exists
    args:
      executable: /bin/bash

  # ------------------------------------------------------------------
  # 5 — Configure zabbix_server.conf
  # ------------------------------------------------------------------
  - name: Write DB settings into zabbix_server.conf
    blockinfile:
      path: /etc/zabbix/zabbix_server.conf
      marker: "# {mark} ANSIBLE MANAGED DB BLOCK"
      block: |
        DBHost=127.0.0.1
        DBUser={{ zabbix_db_user }}
        DBPassword={{ zabbix_db_pass }}
        DBName={{ zabbix_db_name }}
    notify: restart zabbix-server

  # ------------------------------------------------------------------
  # 6 — Set PHP timezone
  # ------------------------------------------------------------------
  - name: Ensure PHP timezone in /etc/zabbix/apache.conf
    lineinfile:
      path: /etc/zabbix/apache.conf
      regexp: '^php_value date.timezone'
      line:  "php_value date.timezone {{ php_timezone }}"
    notify: restart apache2

  - name: Enable Zabbix Apache config
    command: a2enconf zabbix
    args:
      creates: /etc/apache2/conf-enabled/zabbix.conf
    notify: restart apache2

  # ------------------------------------------------------------------
  # 7 — Enable & start services
  # ------------------------------------------------------------------
  - name: Enable and start core services
    service:
      name: "{{ item }}"
      state: started
      enabled: true
    loop:
      - zabbix-server
      - zabbix-agent
      - apache2

  # ------------------------------------------------------------------
  # 8 — Handlers
  # ------------------------------------------------------------------
  handlers:
    - name: restart zabbix-server
      service:
        name: zabbix-server
        state: restarted

    - name: restart apache2
      service:
        name: apache2
        state: restarted
