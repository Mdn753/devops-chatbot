---
- name: Install & configure Zabbix 5 LTS (MariaDB + Apache/PHP)
  hosts: all
  become: true
  gather_facts: true

  vars:
    zabbix_version: "5.0"

    # —— Zabbix DB credentials ————————————————
    zabbix_db_name: zabbix
    zabbix_db_user: zabbix
    zabbix_db_pass: zabbix_password   # change / vault in production

    php_timezone: Africa/Casablanca

  tasks:
  # ------------------------------------------------------------------
  # 1 — Add the official Zabbix repo & key (Ubuntu / Debian)
  # ------------------------------------------------------------------
  - name: Install gnupg & lsb-release
    apt:
      name: [gnupg, lsb-release]
      state: present
      update_cache: true

  - name: Add Zabbix signing key
    apt_key:
      url: https://repo.zabbix.com/zabbix-official-repo.key
      state: present

  - name: Add Zabbix APT repo
    apt_repository:
      repo: >-
        deb https://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu
        {{ ansible_lsb.codename }} main
      state: present
      update_cache: true

  # ------------------------------------------------------------------
  # 2 — Install server, agent, database & web stack
  # ------------------------------------------------------------------
  - name: Install Zabbix server, agent, MariaDB, Apache & PHP deps
    apt:
      name:
        - zabbix-server-mysql
        - zabbix-frontend-php
        - zabbix-agent
        - mariadb-server
        - php-mysql
        - libapache2-mod-php
      state: present
      update_cache: true

  # ------------------------------------------------------------------
  # 3 — Create database & user (socket login as root)
  # ------------------------------------------------------------------
  - name: Ensure MariaDB running
    service:
      name: mariadb
      state: started
      enabled: true

  - name: Create DB and user
    shell: |
      mysql --protocol=socket <<'EOSQL'
      CREATE DATABASE IF NOT EXISTS {{ zabbix_db_name }}
        CHARACTER SET utf8 COLLATE utf8_bin;
      CREATE USER IF NOT EXISTS '{{ zabbix_db_user }}'@'localhost'
        IDENTIFIED BY '{{ zabbix_db_pass }}';
      GRANT ALL PRIVILEGES ON {{ zabbix_db_name }}.* TO
        '{{ zabbix_db_user }}'@'localhost';
      FLUSH PRIVILEGES;
      EOSQL
    args:
      executable: /bin/bash

  # ------------------------------------------------------------------
  # 4 — Import the initial schema (one-time)
  # ------------------------------------------------------------------
  - name: Check if schema already imported
    stat:
      path: "/var/lib/mysql/{{ zabbix_db_name }}/history.ibd"
    register: schema_file

  - name: Import Zabbix schema, images & data
    shell: |
      zcat /usr/share/zabbix-server-mysql/schema.sql.gz  | mysql {{ zabbix_db_name }}
      zcat /usr/share/zabbix-server-mysql/images.sql.gz  | mysql {{ zabbix_db_name }}
      zcat /usr/share/zabbix-server-mysql/data.sql.gz    | mysql {{ zabbix_db_name }}
    when: not schema_file.stat.exists
    args:
      executable: /bin/bash

  # ------------------------------------------------------------------
  # 5 — Tweak zabbix_server.conf so it can log in
  # ------------------------------------------------------------------
  - name: Configure /etc/zabbix/zabbix_server.conf
    blockinfile:
      path: /etc/zabbix/zabbix_server.conf
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: |
        DBHost=127.0.0.1
        DBPassword={{ zabbix_db_pass }}
        DBUser={{ zabbix_db_user }}
        DBName={{ zabbix_db_name }}
    notify: restart zabbix-server

  # ------------------------------------------------------------------
  # 6 — Set PHP timezone for the web UI
  # ------------------------------------------------------------------
  - name: Ensure PHP timezone is set
    lineinfile:
      path: /etc/zabbix/apache.conf
      regexp: '^php_value date.timezone'
      line:  "php_value date.timezone {{ php_timezone }}"
    notify: restart apache2

  # ------------------------------------------------------------------
  # 7 — Enable Apache site & start all services
  # ------------------------------------------------------------------
  - name: Enable Zabbix Apache config
    command: a2enconf zabbix
    notify: restart apache2
    args:
      creates: /etc/apache2/conf-enabled/zabbix.conf

  - name: Start & enable core services
    service:
      name: "{{ item }}"
      state: started
      enabled: true
    loop:
      - zabbix-server
      - zabbix-agent
      - apache2

  # ------------------------------------------------------------------
  # 8 — Handlers
  # ------------------------------------------------------------------
  handlers:
    - name: restart zabbix-server
      service:
        name: zabbix-server
        state: restarted

    - name: restart apache2
      service:
        name: apache2
        state: restarted
